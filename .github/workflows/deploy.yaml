on:
  push:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write # required for dep graph
      security-events: write # push sarif to github security
      id-token: write # required by gar 
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
    - uses: gradle/actions/setup-gradle@06832c7b30a0129d7fb559bcc6e43d26f6374244
    - name: Build jar files
      run: ./gradlew build
    - name: Push docker image to GAR
      uses: nais/docker-build-push@v0
      id: docker-build-push
      with:
        team: delta
        pull: true
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@06832c7b30a0129d7fb559bcc6e43d26f6374244
    - name: Scan docker image for secrets
      uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5
      with:
        image-ref: '${{ steps.docker-push.outputs.image }}'
        format: 'sarif'
        scanners: 'secret'
        output: 'trivy.sarif'
    - uses: github/codeql-action/upload-sarif@5f8171a638ada777af81d42b55959a643bb29017
      with:
        sarif_file: 'trivy.sarif'

  deploy-dev:
    name: Deploy to dev
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: nais-dev.yaml
          IMAGE: ${{ needs.build.outputs.image }}

  deploy-prod:
    name: Deploy to prod
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    needs: [build, deploy-dev]
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: nais-prod.yaml
          IMAGE: ${{ needs.build.outputs.image }}
