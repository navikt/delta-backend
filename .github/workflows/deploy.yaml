on:
  push:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: "write" # for dependency graph
      id-token: "write" # for pushing to GAR
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      id: setup-java
      with:
        distribution: 'temurin'
        java-version: '17'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        dependency-graph: generate-and-submit
        validate-wrappers: true
        cache-encryption-key: ${{ secrets.GradleEncryptionKey }}
    - name: Build jar
      run: ./gradlew shadowJar --configuration-cache
    - name: Push docker image to GAR
      uses: nais/docker-build-push@v0
      id: docker-build-push
      with:
        team: delta
        pull: true
        identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }} # Provided as Organization Secret
        project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }} # Provided as Organization Variable

  deploy-dev:
    name: Deploy to dev
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: nais-dev.yaml
          VAR: image=${{ needs.build.outputs.image }}

  deploy-prod:
    name: Deploy to prod
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build, deploy-dev]
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: nais-prod.yaml
          VAR: image=${{ needs.build.outputs.image }}
